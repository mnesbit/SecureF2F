buildscript {
    ext {
        akkanet_version = '1.0.0-SNAPSHOT'
        junit_version = '4.12'
        junit5_version = '5.1.0'
        rx_version = '2.2.13'
        bouncycastle_version = '1.64'
        eddsa_version = '0.3.0'
        tink_version = '1.3.0'
        avro_version = '1.9.1'
        akka_version = '2.6.5'
        caffeine_version = '2.8.0'
        disruptor_version = '3.4.2'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

import static org.gradle.api.JavaVersion.*
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'idea'
    id 'application'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'idea'
}

allprojects {
    group 'uk.co.nesbit'
    version akkanet_version

    repositories {
        mavenCentral()
        jcenter()
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = VERSION_1_8
        targetCompatibility = VERSION_1_8
        options.encoding = 'UTF-8'
        options.compilerArgs += '-XDenableSunApiLintControl'
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            languageVersion = '1.3'
            apiVersion = '1.3'
            jvmTarget = VERSION_1_8
            javaParameters = true   // Useful for reflection.
            freeCompilerArgs = ['-Xjvm-default=enable']
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()

        // Prevent the project from creating temporary files outside of the build directory.
        systemProperty 'java.io.tmpdir', buildDir.absolutePath
    }


    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        implementation "org.slf4j:slf4j-api:$slf4j_version"

        // Test utilities
        testImplementation "junit:junit:$junit_version"
        testRuntime "org.junit.vintage:junit-vintage-engine:$junit5_version"
        testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testRuntimeOnly "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testRuntimeOnly "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"
    }
}

wrapper {
    gradleVersion = "5.6.1"
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Actor framework
    implementation "com.typesafe.akka:akka-actor_2.13:$akka_version"
    testImplementation "com.typesafe.akka:akka-testkit_2.13:$akka_version"
    runtime "com.typesafe.akka:akka-slf4j_2.13:$akka_version"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"
    // for lock-free logging
    runtime "com.lmax:disruptor:$disruptor_version"
    implementation project(':avro')
    implementation project(':crypto')
    implementation project(':network')
}

mainClassName = "uk.co.nesbit.MainKt"
